{"version":3,"sources":["api/goods.js","compnonents/GoodsList/GoodsList.js","compnonents/goodShape/GoodShape.js","compnonents/Button/Button.js","App.js","index.js"],"names":["testFakeApi","fetch","then","response","ok","Error","status","statusText","json","getAll","get5First","a","allGoods","sort","b","name","localeCompare","slice","getRed","filter","good","color","GoodsList","PropTypes","number","isRequired","string","goods","className","map","key","id","style","Button","state","isLoading","getGoodsFromServer","props","getGoods","setGoods","ifError","setState","this","children","onClick","type","role","aria-hidden","React","PureComponent","defaultProps","App","isError","ReactDOM","render","document","getElementById"],"mappings":"gTAIO,SAASA,IACd,OAAOC,MAHK,2BAGWC,MAAK,SAACC,GAC3B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIb,SAASC,IACd,OAAOR,MAdI,yEAeRC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,IAAME,EAAS,uCAAG,4BAAAC,EAAA,sEACAF,IADA,cACjBG,EADiB,yBAGhBA,EAASC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEI,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,IAH/C,2CAAH,qDAMTC,EAAM,uCAAG,4BAAAP,EAAA,sEACGF,IADH,cACdG,EADc,yBAGbA,EAASO,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHhB,2CAAH,qD,gBCPJC,GCrBTC,IAAUC,OAAOC,WACfF,IAAUG,OAAOD,WAChBF,IAAUG,OAAOD,WDDR,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAChB,6BACE,wBAAIC,UAAU,cACXD,EAAME,KAAI,SAAAT,GAAI,OACb,wBACEU,IAAKV,EAAKW,GACVC,MAAO,CAAEX,MAAOD,EAAKC,OACrBO,UAAU,mBAETR,EAAKL,aEVVkB,E,4MACJC,MAAQ,CACNC,WAAW,G,EAGbC,mB,sBAAqB,oCAAAzB,EAAA,+DACqB,EAAK0B,MAArCC,EADW,EACXA,SAAUC,EADC,EACDA,SAAUC,EADT,EACSA,QAE5B,EAAKC,SAAS,CAAEN,WAAW,IAHR,kBAMGG,IANH,OAMXX,EANW,OAQjBY,EAASZ,GAET,EAAKc,SAAS,CAAEN,WAAW,IAVV,kDAYjBK,IACA,EAAKC,SAAS,CAAEN,WAAW,IAbV,0D,uDAiBX,IAAD,EACyBO,KAAKL,MAA7BM,EADD,EACCA,SAAUf,EADX,EACWA,UACVO,EAAcO,KAAKR,MAAnBC,UAER,OACE,4BACES,QAASF,KAAKN,mBACdR,UAAWA,GAAS,uBACpBiB,KAAK,UAEJV,EAEG,0BACEP,UAAU,+BACVkB,KAAK,SACLC,cAAY,SAEZJ,O,GAvCOK,IAAMC,eAqD3BhB,EAAOiB,aAAe,CACpBtB,UAAW,IAGEK,QCiBAkB,E,4MArEbjB,MAAQ,CACNP,MAAO,GACPyB,SAAS,G,EAGXb,SAAW,SAACZ,GACV,EAAKc,SAAS,CACZd,QACAyB,SAAS,K,EAIbZ,QAAU,WACR,EAAKC,SAAS,CAAEW,SAAS,K,uDAGjB,IAAD,EACoBV,KAAKR,MAAxBP,EADD,EACCA,MAAOyB,EADR,EACQA,QAEf,OACE,6BACE,qDAEA,kBAAC,EAAD,CACEd,SAAU7B,EACV8B,SAAUG,KAAKH,SACfC,QAASE,KAAKF,SAHhB,kBAQA,kBAAC,EAAD,CACEF,SAAU5B,EACV6B,SAAUG,KAAKH,SACfC,QAASE,KAAKF,SAHhB,gBAQA,kBAAC,EAAD,CACEF,SAAUpB,EACVqB,SAAUG,KAAKH,SACfC,QAASE,KAAKF,SAHhB,kBAQA,kBAAC,EAAD,CACEZ,UAAU,uBACVU,SAAUtC,EACVuC,SAAUG,KAAKH,SACfC,QAASE,KAAKF,SAJhB,kBASCY,EAEG,yBAAKxB,UAAU,+BAA+BkB,KAAK,SAAnD,oBAIA,kBAAC,EAAD,CAAWnB,MAAOA,S,GA/DZqB,IAAMC,eCHxBI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.6f49d41d.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\nconst FAKE_API = `https://my-fake-api.com`;\n\nexport function testFakeApi() {\n  return fetch(FAKE_API).then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n}\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = async() => {\n  const allGoods = await getAll();\n\n  return allGoods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n};\n\nexport const getRed = async() => {\n  const allGoods = await getAll();\n\n  return allGoods.filter(good => good.color === 'red');\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodShape } from '../goodShape/GoodShape';\n\nconst GoodsList = ({ goods }) => (\n  <div>\n    <ul className=\"list-group\">\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n          className=\"list-group-item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape(GoodShape)).isRequired,\n};\n\nexport default GoodsList;\n","import PropTypes from 'prop-types';\n\nexport const GoodShape = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends React.PureComponent {\n  state = {\n    isLoading: false,\n  }\n\n  getGoodsFromServer = async() => {\n    const { getGoods, setGoods, ifError } = this.props;\n\n    this.setState({ isLoading: true });\n\n    try {\n      const goods = await getGoods();\n\n      setGoods(goods);\n\n      this.setState({ isLoading: false });\n    } catch (e) {\n      ifError();\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { children, className } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <button\n        onClick={this.getGoodsFromServer}\n        className={className || `btn btn-primary ml-3`}\n        type=\"button\"\n      >\n        {isLoading\n          ? (\n            <span\n              className=\"spinner-grow spinner-grow-sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          ) : children}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  getGoods: PropTypes.func.isRequired,\n  setGoods: PropTypes.func.isRequired,\n  ifError: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: '',\n};\n\nexport default Button;\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRed, testFakeApi } from './api/goods';\nimport GoodsList from './compnonents/GoodsList/GoodsList';\nimport Button from './compnonents/Button/Button';\n\nclass App extends React.PureComponent {\n  state = {\n    goods: [],\n    isError: false,\n  };\n\n  setGoods = (goods) => {\n    this.setState({\n      goods,\n      isError: false,\n    });\n  };\n\n  ifError = () => {\n    this.setState({ isError: true });\n  };\n\n  render() {\n    const { goods, isError } = this.state;\n\n    return (\n      <div>\n        <h1>Dynamic list of Goods</h1>\n\n        <Button\n          getGoods={getAll}\n          setGoods={this.setGoods}\n          ifError={this.ifError}\n        >\n          Load All Goods\n        </Button>\n\n        <Button\n          getGoods={get5First}\n          setGoods={this.setGoods}\n          ifError={this.ifError}\n        >\n          Load First 5\n        </Button>\n\n        <Button\n          getGoods={getRed}\n          setGoods={this.setGoods}\n          ifError={this.ifError}\n        >\n          Load Red Goods\n        </Button>\n\n        <Button\n          className=\"btn btn-warning ml-3\"\n          getGoods={testFakeApi}\n          setGoods={this.setGoods}\n          ifError={this.ifError}\n        >\n          Try make Error\n        </Button>\n\n        {isError\n          ? (\n            <div className=\"alert alert-danger w-50 mt-3\" role=\"alert\">\n              Ooops..Error 404\n            </div>\n          )\n          : <GoodsList goods={goods} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}